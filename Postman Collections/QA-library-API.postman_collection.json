{
	"info": {
		"_postman_id": "61311f3f-af41-4c6c-b964-70cbbb0d4a3b",
		"name": "QA-library-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://localhost:3000/books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/books/123",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/books/?id=125",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						""
					],
					"query": [
						{
							"key": "id",
							"value": "125"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"setTimeout(() => {}, 2000)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"id\": \"133\",\n        \"title\": \"Really Good Book\",\n        \"author\": \"William Faulkner\",\n        \"synopsis\": \"A book you can't put down\",\n        \"published\": \"2021/10/22\",\n        \"pages\": \"634\",\n        \"rating\": \"4\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/books/133",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Edited Title\",\n    \"author\": \"Edited Author\",\n    \"synopsis\": \"Edited Synopsis\",\n    \"published\": \"2000/05/04\",\n    \"pages\": \"0\",\n    \"rating\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/books/133",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						"133"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/books/133",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/books/133",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						"133"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/books/?query=harry",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/books/?query=prisoner",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						""
					],
					"query": [
						{
							"key": "query",
							"value": "prisoner",
							"description": "Technically this test works, even though it is returning all the books, given how I set up the api initially before setting up the back end."
						}
					]
				}
			},
			"response": []
		}
	]
}